
/* front end: 
	  CSS Property and more notes:
		> Position -- relative vs absolute i.e. parent vs children
		Relative, absolute, fixed, static, sticky: 
		https://www.freecodecamp.org/news/css-position-property-explained/
		> Display -- 
		> Id vs class -- Id can be only used once, class can be used multiple times
	  	> JavaScript accesses and manipulates DOM elements.
		> Attribute vs property -- Properties belong to the DOM. Since DOM is an
		  object in HTML, properties belong to the DOM. Since DOM is an object in 
		  JavaScript, we can get and set properties. Attributes are used to customize
		  tags, they are defined by HTML 
*/

/* Resizing, background color light grey */
body{
  background-color: rgb(220,220,220);
  margin: auto; /*let the browser determine margin */
}
header{
  animation: fadeIn 3s;
}

main{
  /* margin-left: 7%;
  margin-right: 7%; */
  animation: fadeIn 5s;
  display: flex;
  justify-content: center;
}
#MyWrapper{
  max-width: 1540px;
  background: white;
  margin: auto; /* Will center the div, let the browser determine margin */
}
/* Remember that the percentage in a css property will refer to the
parent element where the percentage is being used. Remember that margin
is the distance between two elements and padding is the distance between 
an elements boarder */
#WeddingNameHeader{
  display: flex;
  justify-content: space-between;
  padding-top: 1%; /* Padding Percentage is Based 
                  on the Parent Elementâ€™s Width */
  height: 200px;  /*change as the resolution changes */
  margin-left: 7%;
  margin-right: 7%;
}
#navBar{
  position: relative;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  list-style-type: none;
  margin-left: 14%;
  margin-right: 14%;
  margin-top: 3%;
  margin-bottom: 3%;
  padding: 0%; /* For some reason there is 
               padding on the left of 'Home' */
}
a {
  text-decoration: none;
  color: #696868;
  font-weight:bold;
  padding-left: 4px;
  padding-right: 4px;
  cursor: pointer;
}
li{
  font-size: x-large;
  font-family: 'Courier New', Courier, monospace;
}
li:hover{
  background-color: rgb(177, 55, 165);
  transition: background-color 1s;
}
a:hover{
  color: white;
}

footer{
  animation: fadeIn 3s;
  display: flex;
  justify-content: center;
}

@keyframes fadeIn {
  0% { opacity: 0;  }
  100% { opacity: 1; }
}

img {
  width: 280px;
  height: 190px;
  opacity: 0.8;
}

#weddingTitle {
   /* make font bold after lunch, use Vue for countdown and to control dom */
  font-family: Tangerine, 'Tangerine';
  text-shadow: 4px 4px 4px #aaa;
  font-size: 500%;
  margin-top: 20%;
}
/* Back up in case remote server cant fetch font from Google */
@font-face {
  font-family: Tangerine;
  src: url('Tangerine-Regular.ttf');
  font-display: swap;
}

#MassAndReceptionInfo {
  font-family:Times, serif;
  font-size: large;
}
#WeddingDateHeader {
  font-family: sans-serif;
  font-size: large;
  color:#5b5a5a;
  display: flex;
  justify-content: center;
}

/* TODO */
/* 10% smaller */
 @media screen and (max-width: 1300px)
 {
  #WeddingNameHeader{
    height: 180px;  /*change as the resolution changes */
  }
  img {
    width: 252px;
    height: 171px;
  }
  #weddingTitle {
    font-size: 450%;
  }
 }

 /* 20% smaller */
 @media screen and (max-width: 1155px)
 {
  #WeddingNameHeader{
    height: 160px;  /*change as the resolution changes */
  }
  img {
    width: 224px;
    height: 152px;
  }
  #weddingTitle {
    font-size: 400%;
  }
 }

  /* 30% smaller */
  @media screen and (max-width: 1045px)
  {
    #WeddingNameHeader{
      height: 140px;  /*change as the resolution changes */
    }
    img {
      width: 196px;
      height: 133px;
    }
    #weddingTitle {
      font-size: 350%;
    }  

    #WeddingDateHeader{
      font-size: medium;
    }
    #MassAndReceptionInfo{
      font-size: medium;
    }
  }

  /* Mobile Device -- add a fade out and collapse div
     that holds image. Have a fade out effect, then
     remove space images need in the layout. Add 
     burger menu.
     
     Learned about 'transition' css property: 
     https://developer.mozilla.org/en-US/docs/Web/CSS/transition
     
     transition: property name|duration|easing function|delay
     */
     
  /* Fade out images. Style changes when scree gets smaller*/
  @media screen and (max-width: 970px)
  {
   img {
    opacity: 0;
    transition: opacity .5s;
   }
  }
  @media screen and (max-width: 890px)
  {
   img {
    display: none;
   }
  }

  /* Fade in images again. Style changes when screen gets bigger*/
  @media screen and (min-width: 970px)
  {
    img {
    opacity: 1;
    transition: opacity .5s;
    }
  }


    /* IMPORTANT: */
    /* Minimum screen size is 320px */

  